// Generated by Selenium IDE (partially, headless code done manually)
const { Builder, By, Key, until } = require('selenium-webdriver')
const assert = require('assert')
const firefox = require('selenium-webdriver/firefox')
const options = new firefox.Options()

describe('Default Suite', function() {
  this.timeout(30000)
  let driver
  let vars
  beforeEach(async function() {
    driver = await new Builder().forBrowser('firefox').setFirefoxOptions(options.addArguments('--headless')).build()
    vars = {}
  })
  afterEach(async function() {
    await driver.quit();
  })
  it('ExistingSite', async function() {
    await driver.get("http://localhost:3000/")
    await driver.manage().window().setRect({ width: 550, height: 692 })
    await driver.findElement(By.id("url")).click()
    await driver.findElement(By.id("url")).sendKeys("https://example.com/")
    await driver.findElement(By.css("button")).click()
    assert(await driver.findElement(By.css("h1")).getText() == "Successfully downloaded page!")
  })
  it('InvalidSite', async function() {
    await driver.get("http://localhost:3000/")
    await driver.manage().window().setRect({ width: 550, height: 692 })
    await driver.findElement(By.id("url")).click()
    await driver.findElement(By.id("url")).sendKeys("https://invalid.com")
    await driver.findElement(By.css("button")).click()
    assert(await driver.findElement(By.css("h1")).getText() == "Download failed!")
  })
  it('InvalidURL', async function() {
    await driver.get("http://localhost:3000/")
    await driver.manage().window().setRect({ width: 550, height: 692 })
    await driver.findElement(By.id("url")).click()
    await driver.findElement(By.id("url")).sendKeys("example")
    await driver.findElement(By.css("button")).click()
    assert(await driver.findElement(By.css("h1")).getText() == "Download failed!")
  })
})
